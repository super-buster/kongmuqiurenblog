---
title: "微分方程计算"
date: 2021-04-15T09:55:08+08:00
draft: false
math: true
---

之前我已经介绍过数值计算中的积分计算，现在我们来看看对于微分方程是怎么样的。

首先给出问题描述：
*给定微分方程y'=f(x,y)和它的初值 $ y(a) $ ,求 $ y(b) $*

根据Newton-Leibniz公式，
\begin{aligned}
y(b)-y(a)=\int_{a}^{b} f(x,y) dx
\end{aligned}

由此可以看出数值计算微分方程和积分计算的区别--里面被积函数是x的隐函数，它不仅依赖于x，还和y有关。
我会从前向欧拉法开始，介绍解决这类问题的一些方法。
* 前向欧拉法
前向欧拉法是非常经典的数值计算微分方程的做法，后面的方法只不过都是基于它的改进而已。
考虑一个简单的初值问题(IVP),如下所示，我们需要求出x=1时，y的取值。

\begin{aligned}
y'=f(x,y)=x^2+y^2 \\
y(0)=1
\end{aligned}

前向欧拉法用当前点的导数值代替了整个区间的导数值，忽略了二阶及以上导数信息。

\begin{aligned}
\int_{a}^{b} f(x,y) dx =f(a,y(a))(b-a) 
\end{aligned}

用此公式去计算初值问题

\begin{aligned}
y(1)-y(0)=\int_{0}^{1} f(0,1) dx =1
\end{aligned}
因此y(1)=2。为了减小误差可以取一个很小的步长，例如h=0.01,进行多次迭代。并且我们很容易发现步长取得越小，误差越小，当然这样迭代的时间也会变长。下面是具体的做法：
|    x | y           |          f(x,y) |
|------+-------------+----------------|
|    0 | 1           |              1 |
| 0.01 | 1*0.01      |         0.0002 |
| 0.02 | 0.0002*0.01 | 0.000400000004 |
|  ... | ...         |            ... |
|    1 | xx          |            xxx |

* 后向(隐式)欧拉法
后向欧拉法在计算导数值的时候向后看了一步，它的计算公式为：

\begin{aligned}
k_1&=f(a,b) \\
\int_{a}^{b} f(x,y) dx &=\int_{a}^{b}f(b,y(a)+k1*(b-a)) dx
\end{aligned}

还是刚才那个例子，我们用欧拉前向法计算出了后一步的函数值y(1)=2，那么f(1,2)=5，我们用这个导数值重新计算y(1)。

\begin{aligned}
y(1)-y(0)=\int_{0}^{1} f(x,y) dx =\int_{0}^{1} f(1,2) dx = 5
\end{aligned}

注意，我们其实是先用前向欧拉法算了一个隐式的y(1),再利用这个信息去得到最后的y(1),因此说后向欧拉法是隐式的。为什么用后一步的导数信息也是可行的？我们用Taylor展开来说明这一点。
$$ f(x+h)=f(x)+f'(x)h+\frac{1}{2}f''(x)h^2+O(h^2)  \tag{1}$$
同样地把f'(x+h)展开
$$ f'(x+h)=f'(x)+f''(x)h+O(h) \tag{2}    $$
(2)式两边乘以h，把f'(x)h带入(1)式，得到
$$ f(x+h)=f(x)+f'(x+h)h- \frac{1}{2}f''(x)h^2+O(h^2) $$

忽略二阶及高阶项就得到了后向欧拉法。
* RK方法(龙格库塔法)
** RK-2
RK-2是对欧拉法的改进，RK-2综合考虑了a和b的导数信息。它的公式为：

\begin{aligned}
y(b)-y(a) &=\Delta x (\lambda_1 k1+ \lambda_2 k2) \\
k1&= f(a,y_{t}) \\
k2&=f(b,y_{t}+k1*\Delta x) \\
\Delta x&=b-a \\
\end{aligned}

可以看出，其实这就是之前积分计算中的梯形法。当然之前的中点矩形法也能用。中点矩形法的公式为

\begin{aligned}
y(b)-y(a)=\int_{a}^{b} f(x_{t+\frac{1}{2}},y_{t+\frac{1}{2}}) dx =f(x_{t+\frac{1}{2}},y_{t+\frac{1}{2}})(b-a) 
\end{aligned}

** RK-3
RK-3
** RK-4
RK-4是微分方程计算的标准方法。
